<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Borrow</title>
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,400;1,100;1,500&display=swap" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <!--Bootstrap-->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-rbsA2VBKQhggwzxH7pPCaAqO46MgnOM80zW1RWuH61DGLwZJEdK2Kadq2F9CUG65" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/css/bootstrap-multiselect.css">
    <link rel="stylesheet" type="text/css" href="/style_sheets/administration/borrowManagement.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.15/js/bootstrap-multiselect.min.js"></script>
</head>
<body>
    <div class="container-fluid">
        <nav class="navbar navbar-expand-md navbar-expand-lg fixed-top navbar-light">
          <div class="container-fluid">
            <a class="navbar-brand" href="#">
              <img src="/assets/icons8-open-book-50.svg" alt="" width="30" height="24">
              Book Worms
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
              <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse justify-content-end" id="navbarSupportedContent">
              <ul class="navbar-nav">
                <li class="nav-item">
                  <a class="nav-link" aria-current="page" href="http://localhost:3300/adminInterface">Users</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="http://localhost:3300/bookMangement">Books</a>
                </li>
                <li class="nav-item">
                  <a class="nav-link" href="#">Borrow</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="http://localhost:3300/reservationsManagement">Reservations</a>
                  </li>
                <li class="nav-item">
                  <a class="nav-link" href="http://localhost:3300/adminLogin/Logout">Logout</a>
                </li>
              </ul>
            </div>
          </div>
        </nav>
    </div>

    <div class="container pt-5" id="manage-borrow">

      <div class="row">
        <div class="col-6 text-left">
          <button class="btn" data-bs-toggle="modal" data-bs-target="#addAuthorModal">+ New Borrow</button>
        </div>
    </div>

      <div class="row mt-4">
          <div class="col-12">
              <table class="table table-striped">
                  <thead>
                      <tr>
                          <th scope="col">Borrower Library ID</th>
                          <th scope="col">borrow_date</th>
                          <th scope="col">due_date</th>
                          <th scope="col">status</th>
                          <th scope="col">books</th>
                          <th scope="col">details</th>

                      </tr>
                  </thead>
                  <tbody>
                    <% borrows.forEach(borrow => { %>
                      <tr>
                        <td><%= borrow.library_id %></td>
                        <td><%= borrow.borrow_date ? new Date(borrow.borrow_date).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).replace(/\//g, '-') : 'N/A' %></td>
                        <td><%= borrow.due_date ? new Date(borrow.due_date).toLocaleDateString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit' }).replace(/\//g, '-') : 'N/A' %></td>
                        <td><%= borrow.status %></td>
                        <td data-toggle="tooltip" title="<%= borrow.books %>"><%= borrow.books %></td>
                        <td data-toggle="tooltip" title="<%= borrow.details %>"><%= borrow.details %></td>
                        <td>
                          <button class="btn btn-link edit-btn" data-toggle="tooltip" title="Edit" data-borrowerlibraryid="<%= borrow.library_id %>" data-borrowdate="<%= borrow.borrow_date %>" data-duedate="<%= borrow.due_date %>" data-status="<%= borrow.status %>" data-details="<%= borrow.details %>" data-books="<%= borrow.books %>" data-borrowid="<%= borrow.borrow_id %>"  data-bookids="<%= borrow.book_ids %>">
                            <i class="fas fa-edit"></i>
                          </button>
                      </td>
                        <td>
                          <button class="btn btn-link delete-btn" data-toggle="tooltip" title="Delete" data-borrowid="<%= borrow.borrow_id %>">
                            <i class="fas fa-trash-alt"></i>
                          </button>
                        </td>
                      </tr>
                    <% }); %>
                  </tbody>
              </table>
          </div>
      </div>
  </div>

  <div class="modal fade" id="editModal" tabindex="-1" book="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" book="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editModalLabel">Edit Borrow</h5>
          <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">Ã—</span>
          </button>
        </div>
        <div class="modal-body">
          <form id="editForm">
            <div class="form-group">
              <label for="edit-borrowID">Borrow ID</label>
              <input type="text" class="form-control" id="edit-borrowID" readonly data-toggle="tooltip" title="This field cannot be edited">
            </div>
            <div class="form-group">
              <label for="edit-borrowerLibraryID">Borrower Library ID</label>
              <input type="text" class="form-control" id="edit-borrowerLibraryID" readonly data-toggle="tooltip" title="This field cannot be edited">
            </div>
            <div class="form-group">
              <label for="edit-borrowDate" class="col-form-label">Borrow Date:</label>
              <input type="date" class="form-control" id="edit-borrowDate" readonly data-toggle="tooltip" title="This field cannot be edited">
            </div>
            <div class="form-group">
              <label for="edit-dueDate" class="col-form-label">Due Date:</label>
              <input type="date" class="form-control" id="edit-dueDate">
            </div>
            <div class="form-group">
                <label for="edit-status" class="col-form-label">Status:</label>
                <select class="form-control" id="edit-status">
                  <option value="borrowed">Borrowed</option>
                  <option value="cancelled">Cancelled</option>
                  <option value="overdue">Overdue</option>
                  <option value="renewd">Renewed</option>
                  <option value="lost">Lost</option>
                  <option value="damaged">Damaged</option>
                  <option value="returned">Returned</option>
                </select>
              </div>
            <div class="form-group">
              <label for="edit-details" class="col-form-label">Details:</label>
              <input type="text" class="form-control" id="edit-details">
            </div>
            <div class="form-group">
              <label for="edit-books" class="col-form-label" >Books:</label>
              <div class="dropdown">
                <button class="btn btn-success dropdown-toggle"
                        type="button"
                        id="multiSelectDropdown"
                        data-bs-toggle="dropdown"
                        aria-expanded="false">
                    Select
                </button>
                <ul class="dropdown-menu"
                    aria-labelledby="multiSelectDropdown">
                    <% books.forEach(function(book) { %>
                        <li>
                            <label>
                                <input type="checkbox"
                                    value="<%= book.book_id %>">
                                    <%= book.title %>
                            </label>
                        </li>
                    <% }); %>
                </ul>
            </div>
            </div>
          </form>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
          <button type="button" class="btn btn-primary" id="submitEdit">Submit</button>
        </div>
      </div>
    </div>
  </div>




  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-kenU1KFdBIe4zVF0s0G1M5b4hcpxyD9F7jL+jjXkk+Q2h455rYXK/7HAuoJl+0I4" crossorigin="anonymous"></script>
  <script src="https://kit.fontawesome.com/b042d509f8.js" crossorigin="anonymous"></script>

  <script>
    const chBoxes = document.querySelectorAll('.dropdown-menu input[type="checkbox"]');
    const dpBtn = document.getElementById('multiSelectDropdown');
    let mySelectedListItems = [];

    function handleCB() {
        mySelectedListItems = [];
        let mySelectedListItemsText = '';

        chBoxes.forEach((checkbox) => {
            if (checkbox.checked) {
                mySelectedListItems.push(checkbox.value);
                mySelectedListItemsText += checkbox.value + ', ';
            }
        });

        dpBtn.innerText = mySelectedListItems.length > 0  ? mySelectedListItemsText.slice(0, -2) : 'Select';
    }

    function setCheckboxes(bookIDsString) {

      if (typeof bookIDsString === 'string') {
        const bookIDsArray = bookIDsString.split(',').map(id => id.trim());

        chBoxes.forEach((checkbox) => {
          const checkboxValue = checkbox.value.toString();

          if (bookIDsArray.includes(checkboxValue)) {
            checkbox.checked = true;
          } else {
            checkbox.checked = false;
          }
        });

        handleCB(); // Update the displayed list after setting checkboxes
      } else if (Array.isArray(bookIDsString)) {
        // If bookIDsString is an array of strings
        chBoxes.forEach((checkbox) => {
          const checkboxValue = checkbox.value.toString();

          if (bookIDsString.includes(checkboxValue)) {
            checkbox.checked = true;
          } else {
            checkbox.checked = false;
          }
        });

        handleCB(); // Update the displayed list after setting checkboxes
      } else {
        console.error("Invalid book IDs format:", bookIDsString);
        // Handle other invalid formats, such as numbers, objects, etc.
      }
    }

    chBoxes.forEach((checkbox) => {
        checkbox.addEventListener('change', handleCB);
    });


    $(document).ready(function(){

        $('[data-toggle="tooltip"]').tooltip();

        let bookIDs;
        $('.edit-btn').on('click', function() {
            console.log('Edit button hit');

            const borrowID = $(this).data('borrowid');
            console.log("borrow id is:" + borrowID);
            const borrowerLibraryID = $(this).data('borrowerlibraryid');
            const borrowDate = new Date($(this).data('borrowdate'));
            const formattedBorrowDate = borrowDate.toISOString().split('T')[0];
            const status =$(this).data('status');
            const details = $(this).data('details');
            //console.log(typeof(formattedDueDate));
            let formattedDueDate = $(this).data('duedate');

            if (formattedDueDate !== '' && formattedDueDate !== 'N/A') {
                formattedDueDate = new Date(formattedDueDate);
                formattedDueDate = formattedDueDate.toISOString().split('T')[0];
            } else {
                formattedDueDate = 'N/A';
            }

            $('#edit-borrowID').val(borrowID);
            $('#edit-borrowerLibraryID').val(borrowerLibraryID);
            $('#edit-borrowDate').val(formattedBorrowDate);
            $('#edit-dueDate').val(formattedDueDate);
            $('#edit-status').val(status);
            $('#edit-details').val(details);

            let bookIDsData = $(this).data('bookids');

            // Ensure bookIDsData is always an array of strings
            if (typeof bookIDsData === 'string') {
                // If it's a string, split it into an array of IDs
                bookIDs = bookIDsData.split(',').map(id => id.trim());
            } else if (typeof bookIDsData === 'number') {
                // If it's a number, create an array with that single number
                bookIDs = [bookIDsData.toString()];
            } else if (Array.isArray(bookIDsData)) {
                // If it's already an array, convert all elements to strings
                bookIDs = bookIDsData.map(String);
            }

            // Convert the array of IDs to a string for logging (optional)
            const bookIDsString = bookIDs.join(', ');
            console.log("bookIds are " + bookIDsString + " of type " + typeof bookIDsString);

            setCheckboxes(bookIDs);

            $('#editModal').modal('show');
            });


        $('#submitEdit').on('click', function() {

          const borrowID =  $('#edit-borrowID').val();
          console.log("on submit borrowID is " + borrowID);
          const borrowerLibraryID = $('#edit-borrowerLibraryID').val();
          const borrowDate = $('#edit-borrowDate').val();
          const dueDate = $('#edit-dueDate').val();
          const details = $('#edit-details').val();
          const status = $('#edit-status').val();
          const bookIDs = mySelectedListItems;

          // Perform update request
          $.ajax({
            url: '/borrowManagement/update',
            type: 'POST',
            data: {
                borrowID: borrowID,
                borrowerLibraryID: borrowerLibraryID,
                borrowDate: borrowDate,
                dueDate: dueDate,
                details: details,
                status: status,
                bookIDs,bookIDs
            },
            success: function(response) {
              if (response.success) {
                location.reload();
              }
            },
            error: function(error) {
              console.error('Error:', error);
            }
          });

          $('#editModal').modal('hide');
        });

      });
  </script>

</body>
</html>